on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: 14

  deploy_dev:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: 14

    - name: Deploy to Development environment
      uses: actions/ssh-deploy@v1
      with:
        host: ${{ secrets.DEV_HOST }}
        username: ${{ secrets.DEV_USERNAME }}
        key: ${{ secrets.DEV_SSH_KEY }}


  deploy_staging:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged == true
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: 14

    - name: Deploy to Staging environment
      uses: actions/ssh-deploy@v1
      with:
        host: ${{ secrets.STAGING_HOST }}
        username: ${{ secrets.STAGING_USERNAME }}
        key: ${{ secrets.STAGING_SSH_KEY }}
      env:
        TF_VAR_env: staging
        CI: false
        
    - name:   Cache Terraform plugins and modules
      uses: actions/cache@v2
      with:
        path: |
          ~/.terraform.d/plugins
          ~/.terraform.d/plugin-cache
        key: ${{ runner.os }}-terraform-${{ env.TF_VERSION }}-${{ env.TF_VAR_env }}
        restore-keys: |
          ${{ runner.os }}-terraform-${{ env.TF_VERSION }}-${{ env.TF_VAR_env }}
          ${{ runner.os }}-terraform-${{ env.TF_VERSION }}
          ${{ runner.os }}-terraform-
 

  deploy_production:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: 14

    - name: Build and tag Docker image
      run: |
        docker build -t my-image:latest .
        docker tag my-image:latest my-registry/my-image:latest

    - name: Push Docker image to registry
      uses: docker/build-push-action@v2
      with:
        context: .
        push: true
        tags: my-registry/my-image:latest

    - name: Upload artifact
      uses: actions/upload-artifact@v2
      with:
        name: my-image
        path: |
          my-image.tar.gz
 
